#!/bin/bash

COLOR2="\033[1;38;5;213m"  # Banner & label color
RESET="\033[0m"

# ASCII logo (updated)
ascii_logo=(
"              o   o              "
"         oo   o   o   ss         "
"     oooo  oo       os  ssss     "
"    o  o                 s  s    "
"   oo o     oooooooo     s ss   "
"  o oo      ooooooooo      ss s  "
"    oo     ooooo ooooo     so    "
" s  o      oooo   oooo      o  s "
"s o        oooo   oooo        o o"
"s s       ooo       ooo       o o"
" s  s     ooo       ooo     o  o "
"    ss    oo         oo    oo    "
"  s ss ssooo         ooooo oo o  "
"   ss s                   o oo   "
"    s  s                 o  o    "
"     ssss  ss       oo  oooo     "
"         ss   s   s   oo         "
"              s   o              "
)

# Banner (AxOS)
banner_lines=(
"░█████╗░██╗░░██╗░█████╗░░██████╗"
"██╔══██╗╚██╗██╔╝██╔══██╗██╔════╝"
"███████║░╚███╔╝░██║░░██║╚█████╗░"
"██╔══██║░██╔██╗░██║░░██║░╚═══██╗"
"██║░░██║██╔╝╚██╗╚█████╔╝██████╔╝"
"╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═════╝░"
)

# Print logo + banner side-by-side
echo
for i in "${!ascii_logo[@]}"; do
  printf "${COLOR2}%-50s  %-40s${RESET}\n" "${ascii_logo[i]}" "${banner_lines[i]:-}"
done
echo

# System Info
OS="AxOS (Arch-based)"
KERNEL="$(uname -r)"
UPTIME="$(uptime -p)"
SHELL="$SHELL"
DE="${XDG_CURRENT_DESKTOP:-$DESKTOP_SESSION}"
TERM="$TERM"
CPU="$(grep -m1 'model name' /proc/cpuinfo | cut -d ':' -f2 | xargs)"
RAM="$(free -h | awk '/Mem:/ {print $3 "/" $2}')"
PKGS="$(pacman -Q | wc -l)"
STORAGE="$(df -h / | awk 'NR==2 {print $3 "/" $2}')"

# Collect info lines
info_lines=(
  "OS: $OS"
  "Kernel: $KERNEL"
  "Uptime: $UPTIME"
  "Shell: $SHELL"
  "DE: $DE"
  "Terminal: $TERM"
  "CPU: $CPU"
  "RAM: $RAM"
  "Packages: $PKGS"
  "Storage: $STORAGE"
)

# Calculate max label + value length (no colors)
max_len=0
for line in "${info_lines[@]}"; do
  plain="${line}"
  (( ${#plain} > max_len )) && max_len=${#plain}
done

box_width=$((max_len + 4))  # Padding

# Print top border
printf "${COLOR2}╭%s╮${RESET}\n" "$(printf '─%.0s' $(seq 1 $((box_width - 2))))"

# Print each info line inside the box
for line in "${info_lines[@]}"; do
  label="${line%%:*}"
  value="${line#*: }"

  # Truncate if too long
  max_val_width=$((box_width - ${#label} - 6))
  [[ ${#value} -gt $max_val_width ]] && value="${value:0:$((max_val_width - 3))}..."

  # Print line with padded value
  printf "${COLOR2}│ ${COLOR2}%-9s${RESET}%-*s ${COLOR2}│${RESET}\n" "$label:" $((box_width - 13)) "$value"
done

# Bottom border
printf "${COLOR2}╰%s╯${RESET}\n" "$(printf '─%.0s' $(seq 1 $((box_width - 2))))"
