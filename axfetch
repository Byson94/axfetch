#!/bin/bash

COLOR2="\033[1;38;5;213m"  # Bold magenta for ASCII, banner, and labels
RESET="\033[0m"
SCRIPT_DIR="$(dirname "$(realpath "$0")")"

# Inline ASCII logo (no placeholders, pure ASCII)
ascii_logo=(
"                     ooooos"
"                 os   o  o    s"
"            oo       s    s       ss"
"        oooo     o            o     ssss"
"       o    oo                    os    s"
"      oo  o                          s  ss"
"     o o o        oooooooooooo        s s s"
"       o s       ooooooooooooo        s s"
"    s  oo        oooooooooooooo        oo  s"
"   o   o         ooooos  oooooo         o   s"
"  o    o        soooo     soooo         o    s"
"     os         oooo       soooo         so"
" s              ooosss   sssoooo              o"
"     ss        oooo          ooos        so"
"  s    s       oooo          oooo       o    o"
"   s   s       ooo            ooo       o   o"
"    s  ss     oooo            ooos     oo  s"
"       s s  soooos            sooooo  s o"
"     s s s                            o o o"
"      ss  s                          o  oo"
"       s    ss                    oo    o"
"        #sss     s            o     oooo"
"            ss       s    s       oo"
"                 ss   s  o    o"
"                     ssssss"
)

# AxOS banner lines
banner_lines=(
"░█████╗░██╗░░██╗░█████╗░░██████╗"
"██╔══██╗╚██╗██╔╝██╔══██╗██╔════╝"
"███████║░╚███╔╝░██║░░██║╚█████╗░"
"██╔══██║░██╔██╗░██║░░██║░╚═══██╗"
"██║░░██║██╔╝╚██╗╚█████╔╝██████╔╝"
"╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═════╝░"
)

# Print logo + banner side-by-side, both in $COLOR2 (bold magenta)
echo
for i in "${!ascii_logo[@]}"; do
    logo="${ascii_logo[i]}"
    printf "${COLOR2}%-50s  %-40s${RESET}\n" "$logo" "${banner_lines[i]:-}"
done
echo

# ───── System Info ─────
OS="AxOS (Arch-based)"
KERNEL="$(uname -r)"
UPTIME="$(uptime -p)"
SHELL="$SHELL"
WM="${XDG_CURRENT_DESKTOP:-$DESKTOP_SESSION}"
TERM="$TERM"
CPU="$(grep -m1 'model name' /proc/cpuinfo | cut -d ':' -f2 | xargs)"
RAM="$(free -h | awk '/Mem:/ {print $3 "/" $2}')"
PKGS="$(pacman -Q | wc -l)"
STORAGE="$(df -h / | awk 'NR==2 {print $3 "/" $2}')"

# Prepare array of label/value pairs
declare -a labels=("OS:" "Kernel:" "Uptime:" "Shell:" "WM/DE:" "Terminal:" "CPU:" "RAM:" "Packages:" "Storage:")
declare -a values=("$OS" "$KERNEL" "$UPTIME" "$SHELL" "$WM" "$TERM" "$CPU" "$RAM" "$PKGS" "$STORAGE")

# Find max length of labels and max length of values
max_label_len=0
max_value_len=0

for label in "${labels[@]}"; do
  (( ${#label} > max_label_len )) && max_label_len=${#label}
done
for val in "${values[@]}"; do
  (( ${#val} > max_value_len )) && max_value_len=${#val}
done

# Width of the box:
# Two columns side by side: label+value + label+value with 3 spaces between, plus 4 border chars and padding.
# So total width = 4 (borders) + 2*(max_label_len + 1 space + max_value_len) + 3 spaces between columns
box_width=$((4 + 2*(max_label_len + 1 + max_value_len) + 3))

# Draw top border
printf "${COLOR2}╭%s╮${RESET}\n" "$(printf '─%.0s' $(seq 1 $((box_width - 2))))"

# Print 5 rows with two columns each, labels and values side by side
for ((i=0; i<5; i++)); do
  left_label=${labels[i*2]}
  left_val=${values[i*2]}
  right_label=${labels[i*2+1]}
  right_val=${values[i*2+1]}

  printf "${COLOR2}│${RESET} %-${max_label_len}s %-${max_value_len}s   %-${max_label_len}s %-${max_value_len}s ${COLOR2}│${RESET}\n" \
    "$left_label" "$left_val" "$right_label" "$right_val"
done

# Draw bottom border
printf "${COLOR2}╰%s╯${RESET}\n" "$(printf '─%.0s' $(seq 1 $((box_width - 2))))"
