#!/bin/bash

# Colors
COLOR2="\033[1;38;5;213m" # pinkish
RESET="\033[0m"

# Logo
ascii_logo=(
"              o   o              "
"         oo   o   o   ss         "
"     oooo  oo       os  ssss     "
"    o  o                 s  s    "
"   oo o     oooooooo     s ss   "
"  o oo      ooooooooo      ss s  "
"    oo     ooooo ooooo     so    "
" s  o      oooo   oooo      o  s "
"s o        oooo   oooo        o o"
"s s       ooo       ooo       o o"
" s  s     ooo       ooo     o  o "
"    ss    oo         oo    oo    "
"  s ss ssooo         ooooo oo o  "
"   ss s                   o oo   "
"    s  s                 o  o    "
"     ssss  ss       oo  oooo     "
"         ss   s   s   oo         "
"              s   o              "
)

# Banner
banner_lines=(
"░█████╗░██╗░░██╗░█████╗░░██████╗"
"██╔══██╗╚██╗██╔╝██╔══██╗██╔════╝"
"███████║░╚███╔╝░██║░░██║╚█████╗░"
"██╔══██║░██╔██╗░██║░░██║░╚═══██╗"
"██║░░██║██╔╝╚██╗╚█████╔╝██████╔╝"
"╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═════╝░"
)

# Print logo and banner side by side
echo
for i in "${!ascii_logo[@]}"; do
  printf "${COLOR2}%-50s  %-40s${RESET}\n" "${ascii_logo[i]}" "${banner_lines[i]:-}"
done
echo

# Gather system info
OS="AxOS (Arch-based)"
KERNEL="$(uname -r)"
UPTIME="$(uptime -p)"
SHELL="$SHELL"
DE="${XDG_CURRENT_DESKTOP:-$DESKTOP_SESSION}"
TERM="$TERM"
CPU="$(grep -m1 'model name' /proc/cpuinfo | cut -d ':' -f2 | xargs)"
RAM="$(free -h | awk '/Mem:/ {print $3 "/" $2}')"
PKGS="$(pacman -Q | wc -l)"
STORAGE="$(df -h / | awk 'NR==2 {print $3 "/" $2}')"

# Build info lines (label: value)
info_lines=(
  "OS:$OS"
  "Kernel:$KERNEL"
  "Uptime:$UPTIME"
  "Shell:$SHELL"
  "DE:$DE"
  "Terminal:$TERM"
  "CPU:$CPU"
  "RAM:$RAM"
  "Packages:$PKGS"
  "Storage:$STORAGE"
)

# Calculate max width of visible lines (without color codes)
max_width=0
for line in "${info_lines[@]}"; do
  label="${line%%:*}"
  value="${line#*:}"
  width=$(( ${#label} + 2 + ${#value} )) # account for ": "
  (( width > max_width )) && max_width=$width
done
box_width=$((max_width + 4))  # padding + border space

# Top border
printf "${COLOR2}╭%s╮${RESET}\n" "$(printf '─%.0s' $(seq 1 $((box_width - 2))))"

# Print lines
for line in "${info_lines[@]}"; do
  label="${line%%:*}"
  value="${line#*:}"
  label_colored="${COLOR2}${label}:${RESET}"

  # Truncate value if too long
  available_space=$((box_width - ${#label} - 6))  # borders + ": "
  [[ ${#value} -gt $available_space ]] && value="${value:0:$((available_space - 3))}..."

  # Print padded line
  printf "${COLOR2}│ ${label_colored} %-*s ${COLOR2}│${RESET}\n" $((box_width - ${#label} - 6)) "$value"
done

# Bottom border
printf "${COLOR2}╰%s╯${RESET}\n" "$(printf '─%.0s' $(seq 1 $((box_width - 2))))"
